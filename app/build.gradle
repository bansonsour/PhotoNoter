apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply from: '../gradle/dex.gradle'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0' //default
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath 'me.tatarka:gradle-retrolambda:3.2.0'
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.yydcdut.note"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true
        multiDexEnabled true
//        jackOptions {
//            enabled true
//        }
//        useJack true

        ndk {
            moduleName = "blur"
            ldLibs "log", "z", "m", "jnigraphics"
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64", "mips", "mips64"
        }

        buildConfigField "String", "EVERNOTE_CONSUMER_KEY", (project.hasProperty('EVERNOTE_CONSUMER_KEY') ? "\"$EVERNOTE_CONSUMER_KEY\"" : "\"Your consumer key\"")
        buildConfigField "String", "EVERNOTE_CONSUMER_SECRET", (project.hasProperty('EVERNOTE_CONSUMER_SECRET') ? "\"$EVERNOTE_CONSUMER_SECRET\"" : "\"Your consumer secret\"")
        buildConfigField "String", "TENCENT_KEY", (project.hasProperty('TENCENT_KEY') ? "\"$TENCENT_KEY\"" : "\"TENCENT_KEY\"")
        buildConfigField "String", "SPEECH_ID", (project.hasProperty('SPEECH_ID') ? "\"$SPEECH_ID\"" : "\"SPEECH_ID\"")
    }

    tasks.withType(JavaCompile) {
        //指定编译JDK版本
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
//        preDexLibraries = false
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {
        release {
//            Properties p = new Properties()
//            p.load(new FileInputStream(project.file('release.properties')))
//            storeFile file(p.storeFile)
//            storePassword p.storePassword
//            keyAlias p.keyAlias
//            keyPassword p.keyPassword
        }
        debug {
            storeFile file("debug.keystore")
        }
    }

    buildTypes {
        release {
            shrinkResources true
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            buildConfigField "boolean", "LOG_DEBUG", "false"
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'src/libs'
    }

    productFlavors {
        Store360 {
//            useJack = true
        }
//        QQ {}
//        WanDouJia {}
//        Xiaomi {}
//        Flyme {}
//        Market91 {}
//        AnZhuo {}
//        BaiDu {}
//        AnZhi {}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    sourceSets { main { jni.srcDirs = ['src/main/jni'] } }
}

//android.applicationVariants.all {
//    variant ->
//        dx.doFirst {
//            dx ->
//                if (dx.additionalParameters == null) {
//                    dx.additionalParameters = []
//                }
//                dx.additionalParameters += '--multi-dex'
//                dx.additionalParameters += '--set-max-idx-number=55000'
//                dx.additionalParameters += "--main-dex-list=$projectDir/multidex.keep".toString()
//        }
//}

afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--multi-dex'
        dx.additionalParameters += '--set-max-idx-number=55000'
        dx.additionalParameters += "--main-dex-list=$projectDir/multidex.keep".toString()
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith("create") && task.name.endsWith("MainDexClassList")) {
        task.doLast {
            def flavorAndBuildType = task.name.substring("create".length(), task.name.length() - "MainDexClassList".length())
            autoSplitDex.configure {
                description = flavorAndBuildType
            }
            autoSplitDex.execute()
        }
    } else if (task.name.startsWith("dex") && (task.name.toLowerCase().endsWith("debug") || task.name.toLowerCase().endsWith("release"))) {
        task.doFirst {
        }
        task.doLast {
        }
    }
}

afterEvaluate {
    tasks.each {
        if (it.name.startsWith("dex") && (it.name.toLowerCase().endsWith("debug") || it.name.toLowerCase().endsWith("release"))) {
        }
    }
}


ext {
    dagger2Version = '2.0'
    leakcanaryVersion = '1.3'
}
dependencies {
    //    compile fileTree(include: ['*.jar'], dir: 'src/libs')
    compile "com.android.support:appcompat-v7:${rootProject.ext.supportVersion}"
    compile "com.android.support:support-v13:${rootProject.ext.supportVersion}"
    compile "com.nineoldandroids:library:2.4.0"
    compile "com.android.support:support-annotations:${rootProject.ext.supportVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.supportVersion}"
    compile "com.android.support:cardview-v7:${rootProject.ext.supportVersion}"
    compile "com.android.support:palette-v7:${rootProject.ext.supportVersion}"
    compile "com.android.support:design:${rootProject.ext.supportVersion}"
    compile "com.jakewharton:butterknife:7.0.1"
    compile "com.evernote:android-sdk:2.0.0-RC3"
    compile "com.yydcdut.sdlv:sdlv:0.4.2@aar"
    compile "com.google.dagger:dagger:${dagger2Version}"
    apt "com.google.dagger:dagger-compiler:${dagger2Version}"
    compile "io.reactivex:rxandroid:1.0.1"
    compile "io.reactivex:rxjava:1.0.14"
    compile "org.greenrobot:eventbus:3.0.0"
    provided "org.glassfish:javax.annotation:10.0-b28"
    compile "com.commit451:PhotoView:1.2.4"
    compile "com.android.support:multidex:1.0.0"
    compile files("src/libs/umeng-analytics-v5.5.3.jar")
    compile files("src/libs/mta-sdk-1.6.2.jar")
    compile files("src/libs/open_sdk_r5043.jar")
    compile files("src/libs/BaiduLBS_Android.jar")
    compile files("src/libs/Msc.jar")
    compile files("src/libs/Sunflower.jar")
    debugCompile "com.squareup.leakcanary:leakcanary-android:${leakcanaryVersion}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryVersion}"
    debugCompile "com.github.moduth:blockcanary:1.0.0"
    releaseCompile "com.github.moduth:blockcanary-no-op:1.0.0"
    compile project(":PG_Edit_SDK")
}

